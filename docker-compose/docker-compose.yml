version: '3.7'

services:
  # Zookeeper: Kafka 의존성으로 반드시 필요
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181

  # Kafka: Zookeeper에 의존
  kafka:
    image: wurstmeister/kafka:2.12-2.1.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # Elasticsearch: 단일 노드 클러스터 구성
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  # Logstash: ELK 파이프라인의 데이터 수집/전처리 도구
  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.1
    ports:
      - "5002:5002"
      - "9600:9600"
    volumes:
      # logstash.conf 파일을 사용하여 Logstash 파이프라인 설정
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml:ro
    depends_on:
      - elasticsearch

  # Kibana: Elasticsearch 데이터 시각화 도구
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  esdata:

